{"version":3,"sources":["components/UsersList/crown.png","languages/english.js","languages/russian.js","components/Spinner/Spinner.js","components/ErrorIndicator/ErrorIndicator.js","components/HOC/withData.js","components/HOC/withResponse.js","components/TaskList/TaskList.js","components/LoginScreen/LoginScreen.js","components/RegisterScreen/RegisterScreen.js","components/UsersList/UsersList.js","components/Content/Content.js","server/server.js","server/dummyserver.js","components/App/App.js","index.js"],"names":["module","exports","app","title","btnRegister","btnLogOut","leftPanel","rightPanel","footer","copyright","successfulRegister","LogOutErrormessage","errorIndicator","message","taskList","btnEdit","btnDelete","btnAdd","btnCancel","btnBack","tasksHeaderBefore","tasksHeaderAfter","addPlaceholder","noTasksHint","loginScreen","namePlaceholder","passwordPlaceholder","btnLogIn","messages","nameEmpty","passEmpty","nameError","passError","detectedActiveSession","brutForce","unknownError","registerScreen","btnCheck","confirmPlaceholder","nameIsFree","nameNotAFree","noEqualPasswords","usersList","noUsersHint","btnTasks","usersHeader","className","props","texts","View","state","data","loading","error","addItem","setState","then","update","catch","removeItem","editItem","prevProps","this","getData","name","Component","response","request","isLoading","withData","editId","editHandler","id","document","querySelector","value","console","log","trim","M","AutoInit","list","length","map","key","href","onClick","isAdmin","style","margin","backToUsersList","type","placeholder","withResponse","password","msg","nameHandler","e","target","passHandler","submitHandler","preventDefault","inputRef","React","createRef","current","focus","isLogIn","logged","reason","onSubmit","ref","onChange","confirmPassword","checkName","confirmPassHandler","registerHandler","isFree","register","registerSuccess","src","crown","alt","showUserTasks","content","screen","server","logIn","addUser","getTasks","addTask","removeTask","editTask","getUsers","removeUser","_users","tasks","maxId","brutCount","_sessions","_maxId","_serverDelay","_BRUTLIMIT","params","_checkRegistration","_checkActiveSession","_denial","_isBrutForce","_addSession","_wrongPassOrName","_endSession","_error","_isAdminSession","_getUsers","_noEmptyPassAndName","_nameIsFree","_addUser","_removeUser","_checkUser","_getTasks","_addTask","_removeTask","_editTask","token","session","find","user","Promise","resolve","setTimeout","push","userName","filter","isRemove","_createToken","sessionEnded","taskAdded","task","taskEdited","taskRemoved","reject","a","editUser","logOut","Server","english","createPopup","changeLanguage","checked","russian","popup","createElement","innerText","classList","add","body","appendChild","parentNode","removeChild","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bbe15ad5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crown.ca838bd2.png\";","export default {\r\n  app: {\r\n    title: 'Amazing TODO-List',\r\n    btnRegister: 'Register',\r\n    btnLogOut: 'Log out',\r\n    leftPanel: 'Amazing Left Panel',\r\n    rightPanel: 'Amazing Right Panel',\r\n    footer: 'Amazing Footer',\r\n    copyright: '© 2019 Copyright Text',\r\n    successfulRegister: 'Registration successful',\r\n    LogOutErrormessage: 'LogOut not successful'\r\n  },\r\n  errorIndicator: {\r\n    message: 'Something is terribly wrong.'\r\n  },\r\n  taskList : {\r\n    btnEdit: 'Edit',\r\n    btnDelete: 'Delete',\r\n    btnAdd: 'Add',\r\n    btnCancel: 'Cancel',\r\n    btnBack: 'Back',\r\n    tasksHeaderBefore: '',\r\n    tasksHeaderAfter: '\\'s tasks:',\r\n    addPlaceholder: 'Enter task title',\r\n    noTasksHint: 'Create a new task.'\r\n  },\r\n  loginScreen: {\r\n    title: 'Enter your name and password',\r\n    namePlaceholder: 'Name',\r\n    passwordPlaceholder: 'Password',\r\n    btnLogIn: 'Log In',\r\n    messages: {\r\n      nameEmpty: 'Name field is empty!',\r\n      passEmpty: 'Password field is empty!',\r\n      nameError: 'Name incorrect',\r\n      passError: 'Password incorrect',\r\n      detectedActiveSession: 'This user now in system.',\r\n      brutForce: 'Too many try log in with incorrect password.',\r\n      unknownError: 'Wooops, something terrible wrong.'\r\n    }\r\n  },\r\n  registerScreen: {\r\n    title: 'Create your name and password',\r\n    namePlaceholder: 'Name',\r\n    btnCheck: 'Check',\r\n    passwordPlaceholder: 'Password',\r\n    confirmPlaceholder: 'Confirm password',\r\n    btnRegister: 'Register',\r\n    messages: {\r\n      nameIsFree: 'This name is free.',\r\n      nameNotAFree: 'This name is occupied.',\r\n      unknownError: 'Wooops, something terrible wrong.',\r\n      noEqualPasswords: 'Passwords not a equal.',\r\n      nameEmpty: 'Name field is empty!',\r\n      passEmpty: 'Password field is empty!',\r\n    }\r\n  },\r\n  usersList: {\r\n    noUsersHint: 'No users in database.',\r\n    btnDelete: 'Delete',\r\n    btnTasks: 'Tasks',\r\n    usersHeader: 'Users:'\r\n  }\r\n}\r\n","export default {\r\n  app: {\r\n    title: 'Невероятный список дел',\r\n    btnRegister: 'Зарегестрироваться',\r\n    btnLogOut: 'Выйти',\r\n    leftPanel: 'Невероятная левая панель',\r\n    rightPanel: 'Невероятная правая панель',\r\n    footer: 'Невероятный футер',\r\n    copyright: '© 2019 Все права защищены',\r\n    successfulRegister: 'Регистрация успешна',\r\n    LogOutErrormessage: 'Не удалось выйти из аккаунта.'\r\n  },\r\n  errorIndicator: {\r\n    message: 'Что-то сломалось.'\r\n  },\r\n  taskList : {\r\n    btnEdit: 'Редактировать',\r\n    btnDelete: 'Удалить',\r\n    btnAdd: 'Добавить',\r\n    btnCancel: 'Выйти',\r\n    btnBack: 'Назад',\r\n    tasksHeaderBefore: 'Задачи ',\r\n    tasksHeaderAfter: 'а:',\r\n    addPlaceholder: 'Введите описание задачи',\r\n    noTasksHint: 'Создайте новую задачу, чтобы начать.'\r\n  },\r\n  loginScreen: {\r\n    title: 'Введите ваше имя и пароль',\r\n    namePlaceholder: 'Имя',\r\n    passwordPlaceholder: 'Пароль',\r\n    btnLogIn: 'Войти',\r\n    messages: {\r\n      nameEmpty: 'Поле имени не должно быть пустым.',\r\n      passEmpty: 'Поле пароля не должно быть пустым.',\r\n      nameError: 'Нет пользователя с таким именем.',\r\n      passError: 'Пароль не верен.',\r\n      detectedActiveSession: 'Этот пользователь уже находиться в системе.',\r\n      brutForce: 'Слишком много попыток входа с неправильным паролем.',\r\n      unknownError: 'Что-то пошло не так.'\r\n    }\r\n  },\r\n  registerScreen: {\r\n    title: 'Придумайте себе имя и пароль',\r\n    namePlaceholder: 'Имя',\r\n    btnCheck: 'Проверить',\r\n    passwordPlaceholder: 'Пароль',\r\n    confirmPlaceholder: 'Подтвердить пароль',\r\n    btnRegister: 'Зарегестрироваться',\r\n    messages: {\r\n      nameIsFree: 'Это имя свободно.',\r\n      nameNotAFree: 'Это имя занято.',\r\n      unknownError: 'Что-то пошло не так.',\r\n      noEqualPasswords: 'Пароли не совпадают.',\r\n      nameEmpty: 'Поле имени не должно быть пустым.',\r\n      passEmpty: 'Поле пароля не должно быть пустым.'\r\n    }\r\n  },\r\n  usersList: {\r\n    noUsersHint: 'В базе данных нет пользователей.',\r\n    btnDelete: 'Удалить',\r\n    btnTasks: 'Задачи',\r\n    usersHeader: 'Пользователи:'\r\n  }\r\n}","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nexport default () => {\r\n  return (\r\n  <div className=\"loader\">Loading...</div>\r\n)\r\n};\r\n","import React from 'react';\r\nimport './ErrorIndicator.css';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      {props.texts.errorIndicator.message}\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default (View) => {\r\n  return class extends Component {\r\n\r\n    state = {\r\n      data: null,\r\n      loading: true,\r\n      error: false\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.getData !== prevProps.getData) {\r\n        this.update();\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.update();\r\n    }\r\n\r\n    addItem = (...args) => {\r\n      this.setState( {\r\n        loading: true,\r\n        error: false\r\n      });\r\n      this.props.addItem(...args)\r\n        .then(() => {\r\n          this.update();\r\n        }).catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          loading: false\r\n        });\r\n      });\r\n    }\r\n\r\n    removeItem = (...args) => {\r\n      this.setState( {\r\n        loading: true,\r\n        error: false\r\n      });\r\n      this.props.removeItem(...args)\r\n        .then(() => {\r\n          this.update();\r\n        }).catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          loading: false\r\n        });\r\n      });\r\n    }\r\n\r\n\r\n    editItem = (...args) => {\r\n      this.setState( {\r\n        loading: true,\r\n        error: false\r\n      });\r\n      this.props.editItem(...args)\r\n        .then(() => {\r\n          this.update();\r\n        }).catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          loading: false\r\n        });\r\n      });\r\n    }\r\n\r\n    update() {\r\n      this.setState( {\r\n        loading: true,\r\n        error: false\r\n      });\r\n\r\n      this.props.getData(this.props.name)\r\n        .then((data) => {\r\n          this.setState({\r\n            data,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            error: true,\r\n            loading: false\r\n          });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n      const { data, loading, error } = this.state;\r\n\r\n      if (loading) {\r\n        return <Spinner />;\r\n      }\r\n\r\n      if (error) {\r\n        return <ErrorIndicator texts={this.props.texts}/>;\r\n      }\r\n\r\n      return <View {...this.props}\r\n                   data={data}\r\n                   addItem={this.addItem}\r\n                   removeItem={this.removeItem}\r\n                   editItem={this.editItem}/>;\r\n    }\r\n  };\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default (View) => {\r\n  return class extends Component {\r\n\r\n    state = {\r\n      response: null,\r\n      loading: false,\r\n      error: false\r\n    };\r\n\r\n    request = (...args) => {\r\n      this.setState( {\r\n        loading: true,\r\n        error: false\r\n      });\r\n      this.props.request(...args)\r\n        .then((response) => {\r\n          this.setState({\r\n            response,\r\n            loading: false\r\n          });\r\n        }).catch(() => {\r\n        this.setState({\r\n          error: true,\r\n          loading: false\r\n        });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { response, loading, error } = this.state;\r\n      if (error) {\r\n        return <ErrorIndicator texts={this.props.texts}/>;\r\n      }\r\n\r\n      return <View {...this.props}\r\n                   response={response}\r\n                   isLoading={loading}\r\n                   request={this.request}/>;\r\n    }\r\n  };\r\n};\r\n","import React, {Component} from 'react';\r\nimport './TaskList.css'\r\nimport {withData} from '../HOC';\r\nimport M from 'materialize-css/dist/js/materialize';\r\n\r\nclass TaskList extends Component {\r\n\r\n  editId = 0;\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    const texts = this.props.texts.taskList;\r\n    const list = this.props.data.length === 0 ? <div className='no-tasks-hint'>{texts.noTasksHint}</div>\r\n      :this.props.data.map(({id, title}) => {\r\n      return (<div key={id} className='task-list-item'>{title}\r\n        <div>\r\n          <button className='cyan btn waves-effect waves-light modal-trigger'\r\n                  href=\"#edit-modal\"\r\n                  onClick={() => this.editHandler(id, title)}>{texts.btnEdit}\r\n          </button>\r\n          <button className='red btn waves-effect waves-light remove-btn'\r\n                  onClick={() => this.props.removeItem(this.props.name, id)}>{texts.btnDelete}\r\n          </button>\r\n        </div>\r\n\r\n      </div>)\r\n    });\r\n\r\n    return (\r\n      <div className=\"task-list\">\r\n        {this.props.isAdmin &&  <button className='cyan btn waves-effect waves-light modal-trigger'\r\n                                        style={{ margin: '15px'}}\r\n                                       href=\"#edit-modal\"\r\n                                       onClick={this.props.backToUsersList}>{texts.btnBack}\r\n                                </button>}\r\n        <div className='tasks-header'>{texts.tasksHeaderBefore}{this.props.name}{texts.tasksHeaderAfter}</div>\r\n        {list}\r\n        <div className='add-form'>\r\n          <input type=\"text\" id='add-input' placeholder={texts.addPlaceholder}/>\r\n          <button onClick={this.addItem}\r\n                  className='add-button waves-effect waves-light btn blue darken-2'>{texts.btnAdd}\r\n          </button>\r\n        </div>\r\n\r\n        <div id=\"edit-modal\" className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h4>Edit task</h4>\r\n            <input type=\"text\" id='edit-input' />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <a  className=\"modal-close waves-effect waves-green btn-flat\" onClick={this.editItem}>{texts.btnEdit}</a>\r\n            <a  className=\"modal-close waves-effect waves-green btn-flat\">{texts.btnCancel}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  editHandler = (id, title) => {\r\n    this.editId = id;\r\n    document.querySelector('#edit-input').value = title;\r\n  }\r\n\r\n  addItem = () => {\r\n    const value = document.querySelector('#add-input').value;\r\n    console.log(value);\r\n    if(value.trim() !== '')\r\n      this.props.addItem(this.props.name, value);\r\n  }\r\n\r\n  editItem = () => {\r\n    const value = document.querySelector('#edit-input').value;\r\n    if(value.trim() !== '')\r\n      this.props.editItem(this.props.name, this.editId, value);\r\n  }\r\n}\r\n\r\nexport default withData(TaskList);","import React, {Component} from 'react';\r\nimport './LoginScreen.css';\r\nimport {withResponse} from '../HOC';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nclass LogScreen extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    password: '',\r\n    msg: ''\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.inputRef.current.focus();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.response === this.props.response)\r\n      return;\r\n    const response = this.props.response;\r\n    const messages = this.props.texts.loginScreen.messages;\r\n    if(response.isLogIn){\r\n      this.props.logged(response.isLogIn, response.isAdmin, this.state.name);\r\n      return;\r\n    }\r\n    switch(response.reason) {\r\n      case 'password':\r\n        this.setState ({\r\n          password: '',\r\n          msg: messages.passError\r\n        });\r\n        return;\r\n      case 'name':\r\n        this.setState ({\r\n          name: '',\r\n          password: '',\r\n          msg: messages.nameError\r\n        });\r\n        return;\r\n      case 'brutForce':\r\n        this.setState ({\r\n          name: '',\r\n          password: '',\r\n          msg: messages.brutForce\r\n        });\r\n        return;\r\n      case 'session':\r\n        this.setState ({\r\n          name: '',\r\n          password: '',\r\n          msg: messages.detectedActiveSession\r\n        });\r\n        return;\r\n      default:\r\n        this.setState ({\r\n          msg: messages.unknownError\r\n        });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const texts = this.props.texts.loginScreen;\r\n    if(this.props.isLoading)\r\n      return <Spinner />\r\n    return (\r\n      <div className='login-screen'>\r\n        <h3 className='login-title'>{texts.title}</h3>\r\n        <form onSubmit={this.submitHandler}>\r\n          <input type=\"text\"\r\n                 ref={this.inputRef}\r\n                 placeholder={texts.namePlaceholder}\r\n                 id='name'\r\n                 value={this.state.name}\r\n                 onChange={this.nameHandler}/>\r\n          <input type=\"password\"\r\n                 placeholder={texts.passwordPlaceholder}\r\n                 id='password'\r\n                 value={this.state.password}\r\n                 onChange={this.passHandler}/>\r\n          <button className='submit-btn waves-effect waves-light btn blue darken-2'\r\n                  type='submit'>{texts.btnLogIn}\r\n          </button>\r\n        </form>\r\n        <div className='message'>{this.state.msg}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  nameHandler = (e) => {\r\n    this.setState ({\r\n      name: e.target.value.trim()\r\n    });\r\n  }\r\n\r\n  passHandler = (e) => {\r\n    this.setState ({\r\n      password: e.target.value.trim()\r\n    });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const messages = this.props.texts.loginScreen.messages;\r\n    if(this.state.name === '') {\r\n      this.setState ({\r\n        msg: messages.nameEmpty\r\n      });\r\n      return;\r\n    }\r\n    if(this.state.password === '') {\r\n      this.setState ({\r\n        msg: messages.passEmpty\r\n      });\r\n      return;\r\n    }\r\n    this.props.request(this.state.name, this.state.password);\r\n  }\r\n}\r\n\r\n export default withResponse(LogScreen);","import React, {Component} from 'react';\r\nimport './RegisterScreen.css';\r\nimport {withResponse} from '../HOC';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n class RegisterScreen extends Component {\r\n\r\n  state= {\r\n    name: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    msg: '',\r\n\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.inputRef.current.focus();\r\n  }\r\n\r\n   componentDidUpdate(prevProps) {\r\n     if(prevProps.response === this.props.response)\r\n       return;\r\n     const response = this.props.response;\r\n     const messages = this.props.texts.registerScreen.messages;\r\n     if(response.isFree && response.register){\r\n       this.props.registerSuccess();\r\n       return;\r\n     }\r\n     if(response.isFree && !response.register){\r\n       this.setState ({\r\n         msg: messages.nameIsFree\r\n       });\r\n       return;\r\n     }\r\n     if(!response.isFree) {\r\n       this.setState ({\r\n         msg: messages.nameNotAFree\r\n       });\r\n       return;\r\n     }\r\n     this.setState ({\r\n       msg: messages.unknownError\r\n     })\r\n   }\r\n\r\n\r\n  render () {\r\n    const texts = this.props.texts.registerScreen;\r\n    const msg = this.props.isLoading ? <Spinner /> : this.state.msg;\r\n    return (\r\n      <div>\r\n        <div className='register-screen'>\r\n          <h3 className='register-title'>{texts.title}</h3>\r\n          <form onSubmit={this.registerHandler}>\r\n            <div className='name-field'>\r\n              <input type=\"text\"\r\n                     placeholder={texts.namePlaceholder}\r\n                     id='name'\r\n                     ref={this.inputRef}\r\n                     onChange={this.nameHandler}\r\n                     value={this.state.name}/>\r\n              <button className='btn-check waves-effect waves-light btn blue darken-2'\r\n                      type='button'\r\n                      onClick={this.checkName}>{texts.btnCheck}</button>\r\n            </div>\r\n            <input type=\"password\"\r\n                   placeholder={texts.passwordPlaceholder}\r\n                   id='password'\r\n                   onChange={this.passHandler}\r\n                   value={this.state.password}/>\r\n            <input type=\"password\"\r\n                   placeholder={texts.confirmPlaceholder}\r\n                   id='confirm-password'\r\n                   onChange={this.confirmPassHandler}\r\n                   value={this.state.confirmPassword}/>\r\n            <button className='submit-btn waves-effect waves-light btn blue darken-2'\r\n                    type='submit'>{texts.btnRegister}\r\n            </button>\r\n          </form>\r\n          <div className='message'>{msg}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  checkName = () => {\r\n    console.log('check')\r\n    const name = document.querySelector('#name').value;\r\n    if(name === ''){\r\n      this.setState({\r\n        msg: this.props.texts.registerScreen.messages.nameEmpty\r\n      });\r\n      return;\r\n    }\r\n    this.props.request(name, '');\r\n  }\r\n\r\n  nameHandler = (e) => {\r\n    this.setState ({\r\n      name: e.target.value.trim()\r\n    });\r\n  }\r\n\r\n   passHandler = (e) => {\r\n    this.setState ({\r\n       password: e.target.value.trim()\r\n     });\r\n   }\r\n\r\n   confirmPassHandler = (e) => {\r\n    if(e.target.value.trim() === this.state.password)\r\n      this.setState ({\r\n        confirmPassword: e.target.value.trim(),\r\n        msg: ''\r\n       });\r\n    else\r\n      this.setState ({\r\n        confirmPassword: e.target.value.trim(),\r\n        msg: this.props.texts.registerScreen.messages.noEqualPasswords\r\n      });\r\n   }\r\n\r\n\r\n  registerHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    const messages = this.props.texts.registerScreen.messages;\r\n    if(this.state.name === ''){\r\n      this.setState({\r\n        msg: messages.nameEmpty\r\n      });\r\n      return;\r\n    }\r\n    if(this.state.password === ''){\r\n      this.setState({\r\n        msg: messages.passEmpty\r\n      });\r\n      return;\r\n    }\r\n    if(this.state.password !== this.state.confirmPassword){\r\n      this.setState({\r\n        msg: messages.noEqualPasswords\r\n      });\r\n      return;\r\n    }\r\n    this.props.request(this.state.name, this.state.password);\r\n  }\r\n\r\n}\r\n\r\nexport default withResponse(RegisterScreen);","import React from 'react';\r\nimport './UsersList.css';\r\nimport {withData} from '../HOC';\r\nimport crown from './crown.png';\r\n\r\nconst UsersList = (props) => {\r\n  const texts = props.texts.usersList;\r\n  const list = (props.data.length) === 0 ? <div className='no-users-hint'>{texts.noUsersHint}</div>\r\n    :props.data.map(({name, isAdmin}) => {\r\n      return (\r\n        <div key={name} className='users-list-item'>\r\n          <div className='name-wrapper'>\r\n            <span>{name}</span>\r\n            {isAdmin && <img src={crown} className='crown-img' alt='crown'/> }\r\n          </div>\r\n          <div>\r\n            <button className='blue darken-2 btn waves-effect waves-light remove-btn'\r\n                    onClick={() => props.showUserTasks(name)}>{texts.btnTasks}\r\n            </button>\r\n            <button className='red btn waves-effect waves-light remove-btn'\r\n                    onClick={() => props.removeItem(name)}>{texts.btnDelete}\r\n            </button>\r\n          </div>\r\n        </div>);\r\n    });\r\n\r\n  return (\r\n    <div className=\"users-list\">\r\n      <div className='users-header'>{texts.usersHeader}</div>\r\n      {list}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default withData(UsersList);","import React from 'react';\r\nimport './Content.css';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport LoginScreen from '../LoginScreen/LoginScreen';\r\nimport RegisterScreen from '../RegisterScreen/RegisterScreen';\r\nimport UsersList from '../UsersList/UsersList';\r\n\r\nexport default (props) => {\r\n    let content;\r\n    switch(props.screen) {\r\n      case 'login' :\r\n        content = <LoginScreen request = {props.server.logIn}\r\n                               logged = {props.logged}\r\n                               name = {props.name}\r\n                               texts = {props.texts}/>\r\n        break;\r\n      case 'register' :\r\n        content = <RegisterScreen request = {props.server.addUser}\r\n                                  texts = {props.texts}\r\n                                  registerSuccess = {props.registerSuccess}/>\r\n        break;\r\n      case 'taskList' :\r\n        content = <TaskList  getData = {props.server.getTasks}\r\n                             addItem = {props.server.addTask}\r\n                             removeItem = {props.server.removeTask}\r\n                             editItem = {props.server.editTask}\r\n                             backToUsersList = {props.backToUsersList}\r\n                             isAdmin = {props.isAdmin}\r\n                             name = {props.name}\r\n                             texts = {props.texts} />\r\n        break;\r\n      case 'usersList' :\r\n        content = <UsersList texts = {props.texts}\r\n                             getData = {props.server.getUsers}\r\n                             removeItem = {props.server.removeUser}\r\n                             showUserTasks = {props.showUserTasks}/>\r\n        break;\r\n      default:\r\n        content = <LoginScreen request = {props.server.logIn}\r\n                               logged = {props.logged}\r\n                               name = {props.name}\r\n                               texts = {props.texts}/>\r\n    }\r\n    return (\r\n      <div className='content'>\r\n        {content}\r\n      </div>\r\n\r\n    )\r\n}","export default class {\r\n  _users = [\r\n    { id: 0,\r\n      name: 'admin',\r\n      password: 'admin',\r\n      isAdmin: true,\r\n      tasks: [\r\n        {id: 0, title: 'Drink coffee'},\r\n        {id: 1, title: 'Create TODO-list'},\r\n        {id: 2, title: 'Drink more coffee'},\r\n        {id: 3, title: 'Refactor TODO-list'}\r\n      ],\r\n      maxId: 3,\r\n      brutCount: 0\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'noadmin',\r\n      password: 'noadmin',\r\n      isAdmin: false,\r\n      tasks: [\r\n        {id: 0, title: 'Drink coffee'},\r\n        {id: 1, title: 'Feed the cat'},\r\n        {id: 2, title: 'Drink beer'},\r\n      ],\r\n      maxId: 4,\r\n      brutCount: 0\r\n    }\r\n  ];\r\n  _sessions = [];\r\n  _maxId = 1;\r\n  _serverDelay = 500;\r\n  _BRUTLIMIT = 3;\r\n\r\n  //Проверка типа запроса, реализация логики проверок и вызова соответствующих ответов сервера\r\n\r\n  request = (type, params) => {\r\n    //console.log('type: ' , type);\r\n    //console.log('params: ' , params);\r\n    switch(type){\r\n      case 'login':\r\n        if(this._checkRegistration(params)) {\r\n          if (!this._checkActiveSession(params)) {\r\n            if (!this._isBrutForce(params)) {\r\n              return this._addSession(params);\r\n            }\r\n            return this._denial('brutForce');\r\n          }\r\n          return this._denial('session');\r\n        }\r\n        return this._denial(this._wrongPassOrName(params));\r\n      case 'logOut':\r\n        if(this._checkActiveSession(params))\r\n          return this._endSession(params);\r\n        return this._error('no access');\r\n      case 'getUsers':\r\n        if(this._checkActiveSession(params) && this._isAdminSession(params))\r\n          return this._getUsers();\r\n        return this._error('no access');\r\n      case 'addUser':\r\n        if(this._noEmptyPassAndName(params) && this._nameIsFree(params))\r\n          return this._addUser(params);\r\n        return this._error('registration failed');\r\n      case 'removeUser':\r\n        if(this._isAdminSession(params))\r\n          return this._removeUser(params);\r\n        return this._error('no access');\r\n      case 'checkUser':\r\n        return this._checkUser(params);\r\n      case 'getTasks':\r\n        if(this._checkActiveSession(params) || this._isAdminSession(params))\r\n          return this._getTasks(params);\r\n        return this._error('no access');\r\n      case 'addTask':\r\n        if(this._checkActiveSession(params) || this._isAdminSession(params))\r\n          return this._addTask(params);\r\n        return this._error('no access');\r\n      case 'removeTask':\r\n        if(this._checkActiveSession(params) || this._isAdminSession(params))\r\n          return this._removeTask(params);\r\n        return this._error('no access');\r\n      case 'editTask':\r\n        if(this._checkActiveSession(params) || this._isAdminSession(params))\r\n          return this._editTask(params);\r\n        return this._error('no access');\r\n      default:\r\n        return this._error('invalid request');\r\n    }\r\n  }\r\n\r\n  //-----Внутренние провекрки сервера.-------\r\n\r\n  _checkActiveSession = ({name, token}) => {\r\n    const session = this._sessions.find((session) => session.name === name);\r\n    if(!session)\r\n        return false;\r\n      if(session.token !== token)\r\n        return false;\r\n      return true;\r\n  }\r\n\r\n  _isAdminSession = ({name, token}) => {\r\n    if(this._checkActiveSession({name, token})){\r\n      const session = this._sessions.find((session) => session.name === name);\r\n      if(session.isAdmin)\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _noEmptyPassAndName = ({name, password}) => {\r\n    if(name.trim() === '' || password.trim() === '')\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  _nameIsFree = ({name}) => {\r\n    if(this._users.find((user) => user.name === name))\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  _checkRegistration = ({name, password}) => {\r\n    const user = this._users.find((user) => user.name === name);\r\n    if(!user)\r\n      return false;\r\n    if(user.password !== password)\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  _wrongPassOrName = ({name, password}) => {\r\n    const user = this._users.find((user) => user.name === name);\r\n    if (!user)\r\n      return 'name';\r\n    if (user.password !== password) {\r\n      if (++user.brutCount > this._BRUTLIMIT)\r\n        return 'brutForce';\r\n      return 'password';\r\n    }\r\n\r\n  }\r\n  _isBrutForce = ({name}) => {\r\n    return this._users.find((user) => user.name === name).brutCount > this._BRUTLIMIT;\r\n  }\r\n\r\n  // ------- Функции, иммитирующие ответ от сервера. --------------\r\n  // Создают Promise и резольвят их (функция error реджектит) через serverDelay миллисекунд.\r\n\r\n  //Функции для работы с пользователями.\r\n\r\n  _getUsers = () => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        const usersList = this._users.map((user) => {\r\n          return{\r\n            name: user.name,\r\n            isAdmin: user.isAdmin\r\n          }\r\n        });\r\n        resolve (usersList);\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _addUser = ({name, password}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n         this._users.push({\r\n            id: ++this._maxId,\r\n            name: name,\r\n            password: password,\r\n            isAdmin: false,\r\n            tasks: [],\r\n            maxId: 0,\r\n            brutCount: 0\r\n          });\r\n          return resolve({isFree: true, register: true});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _checkUser = ({userName}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        if(this._users.find((user) => user.name === userName))\r\n          return resolve({isFree: false, register: false});\r\n        return resolve({isFree: true, register: false});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _removeUser = ({userName}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        this._sessions = this._sessions.filter((session) => session.name !== userName);\r\n        this._users = this._users.filter((user) => user.name !== userName);\r\n        return resolve({isRemove: true});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _addSession = ({name}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        const token = this._createToken();\r\n        const user  = this._users.find((user) => user.name === name);\r\n        const isAdmin = user.isAdmin;\r\n        user.brutCount = 0;\r\n        this._sessions.push({name, token, isAdmin});\r\n        return resolve({isLogIn: true, isAdmin, token, reason: ''});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _endSession = ({name}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        this._sessions = this._sessions.filter((session) => session.name !== name);\r\n        return resolve({sessionEnded: true});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  //Функции для работы с задачами.\r\n\r\n  _getTasks = ({userName}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        const user = this._users.find((user) => user.name === userName);\r\n        const tasks = user ? user.tasks : [];\r\n        resolve (tasks);\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _addTask = ({userName, title}) => {\r\n    return new Promise( (resolve) => {\r\n      const user = this._users.find((user) => user.name === userName);\r\n      user.tasks.push({id: ++user.maxId, title: title});\r\n      setTimeout(() => {\r\n        resolve ({taskAdded: true});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _editTask = ({userName, id, title}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        const user = this._users.find((user) => user.name === userName);\r\n        user.tasks.find((task) => task.id === id).title = title;\r\n        resolve ({taskEdited: true});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _removeTask = ({userName, id}) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        const user = this._users.find((user) => user.name === userName);\r\n        user.tasks = user.tasks.filter((task) => task.id !== id);\r\n        resolve ({taskRemoved: true});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  //Функции ошибок.\r\n\r\n  _denial = (reason) => {\r\n    return new Promise( (resolve) => {\r\n      setTimeout(() => {\r\n        return resolve({isLogIn: false, isAdmin: false, reason});\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  _error = (error) => {\r\n    return new Promise( (resolve, reject) => {\r\n      setTimeout(() => {\r\n        reject(error);\r\n      }, this._serverDelay);\r\n    });\r\n  }\r\n\r\n  // Вспомогательные функции\r\n\r\n  _createToken = () => {\r\n    return 1\r\n  }\r\n\r\n}","import Server from './server';\r\n\r\nexport default class {\r\n\r\n  constructor () {\r\n\r\n    this.server = new Server();\r\n  }\r\n  name = '';\r\n  token = '';\r\n\r\n  getUsers = async () => {\r\n    return await this.server.request('getUsers', {name: this.name, token: this.token});\r\n  }\r\n\r\n  addUser = async (name, password) => {\r\n    if(password === '')\r\n      return await this.server.request('checkUser', {userName : name});\r\n    return await this.server.request('addUser', {name, password});\r\n  }\r\n\r\n  removeUser = async (userName) => {\r\n    return await this.server.request('removeUser', {name: this.name, token: this.token, userName});\r\n  }\r\n\r\n  editUser = async (name, password) => {\r\n\r\n  }\r\n\r\n  logIn = async (name, password) => {\r\n    const {isLogIn, isAdmin, token, reason} = await this.server.request('login', {name, password});\r\n    if(isLogIn)\r\n      this.name = name;\r\n      this.token = token;\r\n    return {isLogIn, isAdmin, reason};\r\n  }\r\n\r\n  logOut = async () => {\r\n    const response = await this.server.request('logOut', {name: this.name, token: this.token});\r\n    if(response.sessionEnded){\r\n      this.name = '';\r\n      this.token = '';\r\n    }\r\n    return;\r\n  }\r\n\r\n  getTasks = async (userName) => {\r\n    return await this.server.request('getTasks', {name: this.name, token: this.token, userName});\r\n  }\r\n\r\n  addTask = async (userName, title) => {\r\n    return await this.server.request('addTask', {name: this.name, title, token: this.token, userName});\r\n  }\r\n\r\n  removeTask = async (userName, id) => {\r\n    return await this.server.request('removeTask', {name: this.name, id, token: this.token, userName});\r\n  }\r\n\r\n  editTask = async (userName, id, title) => {\r\n    return await this.server.request('editTask', {name: this.name, id, title, token: this.token, userName});\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport english from '../../languages/english';\r\nimport russian from '../../languages/russian';\r\n\r\n\r\nimport Content from '../Content/Content';\r\nimport ErrorIndicator from './../ErrorIndicator/ErrorIndicator'\r\nimport Server from \"../../server/dummyserver\";\r\n\r\nexport default class extends Component {\r\n\r\n  state = {\r\n    screen: 'login',\r\n    isLogIn: false,\r\n    isAdmin: false,\r\n    name: '',\r\n    texts: english,\r\n    error: false,\r\n  }\r\n\r\n  constructor (props) {\r\n    super (props);\r\n    this.server = new Server();\r\n  }\r\n\r\n  render () {\r\n    const texts = this.state.texts.app;\r\n    if(this.state.error)\r\n      return <ErrorIndicator message = {texts.LogOutErrormessage} />\r\n    return (\r\n      <div className=\"app\">\r\n        <nav>\r\n          <div className=\"nav-wrapper blue darken-2\">\r\n            <a href=\"#\" className=\"brand-logo center\">{texts.title}</a>\r\n            <div className=\"right\">\r\n              <div className=\"switch left\">\r\n                <label>\r\n                  EN\r\n                  <input type=\"checkbox\" onChange={(e) => this.changeLanguage(e.target.checked)}/>\r\n                  <span className=\"lever\"></span>\r\n                  RU\r\n                </label>\r\n              </div>\r\n              <button onClick={this.logOut}\r\n                      className='login-btn waves-effect waves-light btn right'>\r\n                {this.state.isLogIn ? texts.btnLogOut : texts.btnRegister}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div className='main-container'>\r\n          <div className='left-panel'>{texts.leftPanel}</div>\r\n          <Content screen = {this.state.screen}\r\n                   registerSuccess={this.registerSuccess}\r\n                   logged = {this.logged}\r\n                   showUserTasks = {this.showUserTasks}\r\n                   backToUsersList = {this.backToUsersList}\r\n                   isAdmin = {this.state.isAdmin}\r\n                   name={this.state.name}\r\n                   server = {this.server}\r\n                   texts={this.state.texts}/>\r\n          <div className='right-panel'>{texts.rightPanel}</div>\r\n        </div>\r\n\r\n        <footer className=\"page-footer blue darken-2\">\r\n          <div className=\"container\">{texts.footer}</div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n              {texts.copyright}\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  logOut = () => {\r\n    if(this.state.isLogIn) {\r\n      this.server.logOut()\r\n        .then(() => {\r\n          this.setState({\r\n            screen: 'login',\r\n            isLogIn: false,\r\n            isAdmin: false,\r\n            name: ''\r\n          });\r\n        }).catch(() => {\r\n        this.setState({\r\n          error: true\r\n        });\r\n      });\r\n    } else {\r\n      this.setState ({\r\n        screen: 'register',\r\n      });\r\n    }\r\n  }\r\n\r\n  logged = (isLogIn, isAdmin, name) => {\r\n    this.setState({\r\n      screen: isAdmin ? 'usersList': 'taskList',\r\n      isLogIn,\r\n      isAdmin,\r\n      name\r\n    })\r\n  }\r\n\r\n  registerSuccess = () => {\r\n    this.setState ({\r\n      screen: 'login'\r\n    });\r\n    this.createPopup(this.state.texts.app.successfulRegister);\r\n  }\r\n\r\n  showUserTasks = (name) => {\r\n    this.setState ({\r\n      name,\r\n      screen: 'taskList'\r\n    })\r\n  }\r\n\r\n  backToUsersList = () => {\r\n    if(this.state.isAdmin)\r\n      this.setState ({\r\n        name: '',\r\n        screen: 'usersList'\r\n      })\r\n    else\r\n      this.setState ({\r\n        error: true,\r\n      })\r\n  }\r\n\r\n  changeLanguage = (checked) => {\r\n    if(checked) {\r\n      this.setState({\r\n        texts: russian\r\n      });\r\n    } else {\r\n      this.setState({\r\n        texts: english\r\n      });\r\n    }\r\n  }\r\n\r\n  createPopup = (title) => {\r\n   const popup = document.createElement('div');\r\n   popup.innerText = title;\r\n   popup.classList.add('popup-show');\r\n   document.body.appendChild(popup);\r\n   setTimeout(()=> {\r\n     const popup = document.querySelector('.popup-show');\r\n     popup.parentNode.removeChild(popup);\r\n   }, 3000)\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}